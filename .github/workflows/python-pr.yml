name: Pull Request

on:
    pull_request:
        branches: [develop]
        paths:
            - "src/**"
            - "tests/**"
            - setup.cfg
            - setup.py
            - tox.ini
            - "requirements/*.txt"
            - "docs/**"
            - .python-version
            - .tox-env

jobs:
    tests:
        name: ${{ matrix.name }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                include:
                    - name: Linux
                      os: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Get language version
              id: get_lang_version
              run: |
                    v=$(cat .python-version)
                    echo "lang_version=$v" >> $GITHUB_OUTPUT
                    t=$(cat .tox-env)
                    echo "tox_env=$t" >> $GITHUB_OUTPUT
            - uses: actions/setup-python@v4
              with:
                  python-version: ${{ steps.get_lang_version.outputs.lang_version }}
            - name: update-pip
              run: |
                  pip install -U wheel
                  pip install -U setuptools
                  python -m pip install -U pip
            - name: get-pip-cache-dir
              id: pip-cache
              run: echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
            - name: cache-pip
              uses: actions/cache@v4
              with:
                  path: ${{ steps.pip-cache.outputs.dir }}
                  key: pip|${{ runner.os }}|${{ steps.get_lang_version.outputs.lang_version }}|${{ hashFiles('setup.py') }}|${{ hashFiles('requirements/*.txt') }}
            - name: install-utils
              run: pip install tox
            # - name: lint
            #   run: black --check -t ${{ steps.get_lang_version.outputs.tox_env }} --diff --color src
            - name: tests
              run: tox -e ${{ steps.get_lang_version.outputs.tox_env }}
